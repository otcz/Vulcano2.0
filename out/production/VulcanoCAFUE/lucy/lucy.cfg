# Configuration file for com.luciad.lucy.TLcyMain (the default Lucy frontend). The settings here
# should be specified as key-value pairs in the following format:
#       option1=value1
#       option2=value2
#       ...=...
# For more information on the format of this file,
# see http://java.sun.com/j2se/1.4.2/docs/api/java/util/Properties.html#load(java.io.InputStream)
#
# All settings that are specified here, can also be specified as command line arguments
# to TLcyMain. The settings that are specified on the command line take precedence over the settings
# specified here.

# The file name of the addons file describing which addons need to be loaded.
# Relative to the classpath.
# Default value is addons.xml
addons=lucy/addons.xml

# Here you can define the mode lucy is working with. Should be one of
# DOCKING_MODE or TABBED_PANE_MODE. Default is "DOCKING_MODE".
mode = DOCKING_MODE
#mode = TABBED_PANE_MODE

# Specifies the preferred side for the map component in the application frame. Allowed
# values are 'right' or 'left'. The docking frontend only takes this value into account
# at startup, not when decoding a workspace. The tabbed frontend always takes this
# value into account, also during workspace decoding.
preferredMapSide=right

# The title of the main frame.  It will be internationalized before being used.
# The {0} will be replaced by the workspace that is currently loaded. For more information on
# the formatting, see http://java.sun.com/j2se/1.5.0/docs/api/java/text/MessageFormat.html
# The default is Lucy - Powered by Luciad - [ {0} ]
frameTitle=Centro de Comando y control CAFUE- [ {0} ]

# The filename of the luciad logo, relative to the classpath.
# Default is images/logo_extra_small.png
luciadLogoImageFileName=

# Specifies if a splash screen should be displayed at startup.
# Default value is true.
# Setting this property to false only has an effect when no native splash screen is displayed.
# Note that the default Lucy start-up scripts (e.g. Lucy.sh|bat) do specify a native splash screen.
splashDisplayed=true

# The file name of the splash screen image.  The file name is relative to the classpath.
# Default value is "lucy/splash_screen.png"
splashImageFileName=lucy/splash_screen.png


# Splash screen text options

# True when the initializing text should appear on the splash screen
# Switch to false when the text should be hidden
splashTextDisplayed=false

# Location (x,y) of the initializing text, relative to the edge of the splash screen.
# The splash screen has the same size as the splash image.
# A positive x or y value means relative from the left or top side.  A negative x or y value
# means relative from the right or bottom side.  E.g., if a y-value of -10 is specified, the
# bottom of the text is 10 pixels from the bottom of the splash screen.
# Default value is at the lower left corner: 16, -18
splashRelativeTextLocation=16, -18

# Font for the initializing text.  Defined as in java.awt.Font constructor.
# Style: 0 -> Plain, 1 -> Bold, 2 -> Italic
# Default (when property is omitted): undefined (java default) 
splashFont.name=Dialog
splashFont.size=11
splashFont.style=0

# Font color of the initializing text on the splash screen
# Default is white.
splashFontColor=(255, 255, 255)

# Splash screen progress bar options

# True when a progress bar should be shown at the bottom
# Switch to false when the progress bar should remain hidden
splashProgressBarDisplayed=true

# The height of the progress bar. Should be positive
splashProgressBarHeight=2

# The color for the progress bar
splashProgressBarColor=(197, 208, 0)

# The filenames of the small icon of the frame (and dialogs). The file name is relative to the
# classpath. Leave blank to have the original java coffee cup.
# Default value is "images/luciad_icon16.png,images/luciad_icon32.png,images/luciad_icon64.png,images/luciad_icon128.png".
iconImageFileName=images/luciad_icon16.png,images/luciad_icon32.png,images/luciad_icon64.png,images/luciad_icon128.png

# The directory where file open should start. This value is only used the first time the 
# application is started by some user. Afterwards, it is stored in the user preferences which
# are persistent between sessions.
# Default value is the current directory.
dataDirectory=.

# The amount of time in milliseconds to delay the appearance of a busy cursor when ILcyLucyEnv
# receives a blocking START_BUSY event.
# Default is 0, meaning the busy cursor is displayed immediately.
busyCursorDelay=0

# Indicates if the memory panel should be visible or not.
# Default value is true.
memoryPanel = true

# Indicates if the luciad logo should be visible or not.
# Default value is true.
luciadLogo = false

# Indicates if the time label should be visible or not.
# Default value is true.
timeLabel = false

# Indicates if the time label (if any) should display zulu time or not.
# Default is true.
zuluTime = true

# The maximum buffer size to work with raster files, specified as a number of bytes.
# Specify 'auto' to make it work automatically. The 'auto' mode is compatible
# with asynchronous painting, when specifying the value explicitly, it is not.
# If 'auto' is specified, the value of the 'allocateFullBuffer' property is ignored.
# The default value is 'auto'.
bufferSize = auto

# Indicates if the buffer is allocated at once or not. If 'bufferSize' is 'auto', the
# value of this property is ignored.
# Default value is true.
allocateFullBuffer=true

# Indicates if heavy weight popups should be used.  This is only necessary if you use the 3D addon,
# but it won't harm otherwise but it makes the UI a bit slower.
# Default value is true.
heavyWeightPopups=true

# Defines the zoom direction of the scroll wheel (see also TLcyPreferencesManager.SCROLL_UP_ZOOM_OUT_KEY).
# True means when the scroll wheel is scrolled up (pushed away),
# the map zooms out. If set to false, scrolling up means zooming in.
# This property works application wide: all scroll behavior will follow this property. 
scrollUpZoomOut=false

# Defines if System.exit should be called when the application is closed (e.g., by clicking
# File|Exit).  As of Java 1.5, calling System.exit is no longer really needed, and it can be
# convenient not to do so when other applications are running in the same virtual machine.
# Default is true.
systemExitOnClose=true

# All menu items added by the lucy frontend or the addons can be configured in the respective
# configuration files.  So the menu items added by the frontend can be configured in this
# configuration file, the menu items added by the map addon can be configured by adapting the
# configuration file of the map addon (see addons.xml to find out which config file belongs to
# which addon), ...
# When configuring actions, TLcyDebugAddOn can be of great help.
#
# For every action added to the menu, these properties can be modified:
# - 'item': Comma separated list of the position in the menu structure. The values are assumed
#           to be in the English language.  If Lucy is running in another language (e.g. Dutch
#           by using virtual machine argument -Duser.language=nl), an attempt will be made to
#           translate these values into the current language.  Therefore the translations must
#           be available in the according translations file (e.g. DefaultResources_nl.properties)
#           E.g. "File, SomeSubMenu, Exit" means that an 'Exit' item is added in the
#                'SomeSubMenu' sub menu of the 'File' menu.  If the current language is Dutch,
#                the 'File' will be translated to 'Bestand', and the 'Exit' will translated to
#                'Afsluiten' as indicated in DefaultResources_nl.properties.  The 'SomeSubMenu'
#                will not be translated as no translation is available.
# - 'groups': Comma separated list of the groups used for the item.  The amount of groups
#             should match the amount of items.
#             E.g. "FileGroup, SomeSubMenuGroup, ExitGroup" means that the 'Exit' item is
#                  grouped together with other items it that same group.  Groups are
#                  separated by horizontal lines. The 'SomeSubMenu' sub menu will be grouped
#                  together with other items in that same group.  The 'File' menu will be
#                  grouped together with other items in the 'FileGroup'.  Typically there
#                  will not be any more items in the 'FileGroup', so the 'File' menu will be
#                  the only item in its group.  Groups are also used to define an ordering on
#                  the menu bar.  You can find some more information about ordering of groups
#                  below.
# - 'shortDescription': A short description for that action, used as a tooltip. An attempt will
#                       be made to translate this description.
# - 'longDescription': A long description for that action.  Currently not used in the user
#                      interface. An attempt will be made to translate this description.
# - 'smallIcon': The file name of a small image icon (jpg, png, gif).  The file name is
#                relative to the classpath.
# - 'helpID': An ID for context sensitive help. Currently not used in the user interface.
# - 'insert': 'true' or 'false'.  Default is true.  If set to false, the item will not be
#             inserted in the menu bar.
# - 'active': This property is only valid for menu items that have a checkbox or a radio
#             button (called active settable). If set to 'true', the item will be enabled on
#             startup, it set to 'false' the item will be disabled on startup.  The default
#             depends per active settable.
# - 'acceleratorKey': This property is only valid for menu items.  It defines the accelerator
#                     key for some action, e.g. ctrl O for File|Open.  Some examples are
#                     shift S, ctrl L, alt 2, F10, ...  Note that the letter needs to be in uppercase.
#                     The full specification of all possible accelerator keys can be found
#                     at http://java.sun.com/j2se/1.5.0/docs/api/javax/swing/KeyStroke.html#getKeyStroke(java.lang.String)
# - 'default': This property sets the item as the default item. When this item is show in a popupmenu,
#              it will be rendered in bold. Double-clicking the component that owns the popupmenu
#              should automatically execute that action. Note that it is up to the component to implement
#              the latter behaviour -- the Lucy framework can't enforce this. The standard Lucy controls (such as
#              the map layer control and the map component) that show popupmenus have this behaviour.
# - 'showActionName': Only relevant for tool bars. Set to true to make sure tool bar buttons not
#                     only display their icon, but also their action name.
#
TLcyMain.exitAction.menuBar.item=File,Exit
TLcyMain.exitAction.menuBar.groups=FileGroup, ExitGroup
TLcyMain.exitAction.menuBar.smallIcon=
#TLcyMain.exitAction.menuBar.shortDescription=Close application
#TLcyMain.exitAction.menuBar.longDescription=Closes the application.
#TLcyMain.exitAction.menuBar.helpID=EXIT_ID
#TLcyMain.exitAction.menuBar.insert=true


# Defines the ordering of the groups in the menu bar.  This ordering will be respected by the
# menu bar.  You can use the ordering to force certain groups to be inserted before or after
# other groups, regardless the moment at which the insertion takes place.
# Groups that are not mentioned in this list will be added after all known groups.  Their
# relative ordering depends on the moment at which the insertion takes place.
#
# Example 1:
# Consider the piece of code below:
#   aLucyEnv.getMainMenuBar().insertAction(
#     someColorAction,
#     new TLcyGroupDescriptor( "MapColorGroup" ),
#     new String[] { TLcyLang.getString( "Map" ), TLcyLang.getString( "Colors" ) },
#     new TLcyGroupDescriptor[] { new TLcyGroupDescriptor( "MapGroup", "MapSubMenuGroup" ) } );
#
# or its equivalent in a configuration file:
#   TLcySomeAddOn.someColorAction.menuBar.item=Map, Colors, SomeColorActionName
#   TLcySomeAddOn.someColorAction.menuBar.groups=MapGroup, MapSubMenuGroup, MapColorGroup
#
# then the 'someColorAction' will be inserted in the 'Colors' submenu of the
# 'Map' menu.
# If at least one action (or active settable) was added previously (in time) in
# the same 'Map' menu then this menu already exists, and the 'someColorAction'
# will be added to it. Therefore the given group descriptor UID 'MapGroup' is
# not used (it's only used when the menu needs to be created).
# Because it is impossible to know if you are the first one inserting an item
# to a certain menu or not, it's always necessary to provide the group UID.
#
# If no action (or active settable) was added previously (in time) to the 'Map'
# menu, the 'Map' menu will be created. The group descriptor of this 'Map' menu
# ('MapGroup') will define the location where this menu will be added. Suppose
# there are currently two menus: 'File' and 'Tools'. Suppose the 'File' menu was
# added with a 'FileGroup' group UID and the 'Tools' menu was added with a
# 'ToolsGroup' group UID, then this new 'Map' menu with group UID 'MapGroup' will
# be added inbetween those two existing menus, because the priorities below
# indicate that 'FileGroup' comes before 'MapGroup' and that 'MapGroup' comes
# before 'ToolsGroup'.
#
# The reasoning for the sub menu 'Colors' is identical. If the 'Colors'
# sub menu already existed, the action will be added to it, otherwise the
# 'Colors' sub menu will be created. In that case its location will be defined
# by the 'MapSubMenuGroup' group UID.
#
# If at least one action (or active settable) was added previously (in time)
# with the same group descriptor UID 'MapColorGroup' in the same menus ('Map',
# 'Colors'), then this new 'someColorAction' will be added at the bottom of that
# group (groups are separated with separators, horizontal lines). If no actions
# were added before (in time) to this 'MapColorGroup', then the new group will be
# created. The location of this group within the 'Map', 'Colors' menus, is
# defined by its group UID 'MapColorGroup'. Suppose there was already added an
# action in the 'Map', 'Colors' menu with group UID 'NewObjectGroup', then the
# priorities below indicate that the 'MapColorGroup' will be added above that
# action. Therefore the 'someColorAction' will be added above that action.
#
# The order of the items within a group can optionally be configured by adding an appropriate
# sort attribute to the group. The value of the attribute is a name of a 
# well known group descriptor sort. For instance, to have the OpenSaveGroup
# sorted with the abc sorter it should be configured as follows.
#
#    OpenSaveGroup;sort=abc,
#
# The names of the most common descriptors are 'abc' (sorts alphabetically),
# 'zyx' (sort alphabetically descending),
# 'subMenusLast' (first all menu items, then the menus), 'subMenusFirst' (first all
# menus, then the menu items), 'start' (new items
# are added at the start), 'end' (new items are added at the end, this is the default)
# and 'fixed'.
# The 'fixed' sort takes a number of additional parameters. These parameters
# correspond to the names of actions, menus or menu items. This sort will
# sort the group according to this list of parameters with all items
# that are not in the list coming at the end. For instance, the following 
# configuration will order the workspace group with the 
# "Set default workspace..." menu item coming first, followed by the
# "Recent workspaces" menu and then the rest of the items.
# 
#    WorkspaceGroup;sort=fixed:Set default workspace...!Recent workspaces,\
#
# More information on sorting groups can be found in the Lucy developer guide.
#
# Note how the names of the menus "Map" and "Colors" are translated using
# TLcyLang.getString in the piece of code, but not in the configuration file.
# In the configuration files, all names of actions and menus must be specified
# in the English language.  They will be translated to the current language
# when the configuration file is read (provided the correct translation file
# is available).  The names of the group descriptors are never translated,
# because these are programmatic names that are never displayed to a user.
#
# Example 2:
# Consider the piece of code below:
#   aLucyEnv.getMainMenuBar().insertAction(
#     someExitAction,
#     new TLcyGroupDescriptor( "ExitGroup" ),
#     new String[] { TLcyLang.getString( "File" ) },
#     new TLcyGroupDescriptor[] { new TLcyGroupDescriptor( "FileGroup" ) } );
#
#   aLucyEnv.getMainMenuBar().insertAction(
#     someOpenAction,
#     new TLcyGroupDescriptor( "OpenSaveGroup" ),
#     new String[] { TLcyLang.getString( "File" ) },
#     new TLcyGroupDescriptor[] { new TLcyGroupDescriptor( "FileGroup" ) } );
#
# or its equivalent in a configuration file:
#   TLcySomeAddOn.someExitAction.menuBar.item=File, SomeExitActionName
#   TLcySomeAddOn.someExitAction.menuBar.groups=FileGroup, ExitGroup
#
#   TLcySomeAddOn.someOpenAction.menuBar.item=File, SomeOpenActionName
#   TLcySomeAddOn.someOpenAction.menuBar.groups=FileGroup, OpenSaveGroup
#
# The 'someOpenAction' will be inserted in the 'File' menu above the
# 'someExitAction', because the priorities below indicate that the
# 'OpenSaveGroup' group should be added above the 'ExitGroup' group. Therefore
# actions belonging to the 'OpenSaveGroup' will be added above actions belonging
# to the 'ExitGroup'.
#
#
# This is a comma separated list of values, which is spread out over several lines.  To be
# able to spread out over multiple lines, one must end every line with a back slash.  CARE
# MUST BE TAKEN THAT NO BLANK LINES ARE INSERTED BY ACCIDENT, OR SPACES OR TABS AFTER
# THE BACKSLASH THAT ENDS THE LINE. This applies generally, to all files of this format, to
# all values.
# The value of this specific property is printed to the console when Lucy is started using
# LucyDebug.bat/sh.  This is the easiest way to verify if the property is correctly read.
#
# E.g.
#   key=value,value2 value3 7 value5
# is fully equivalent to
#   key=value,\
#         value2 value3 7\
#         value5
TLcyMain.menuBar.groupPriorities = FileGroup, \
                                       NewGroup, \
                                         NewLayerGroup,\
                                         NewMapGroup,\
                                         NewOtherGroup,\
                                       OpenSaveGroup;sort=subMenusLast, \
                                          RecentFilesGroup;sort=start,\
                                           ClearFilesGroup,\
                                       WorkspaceGroup,\
                                           RecentWorkspacesGroup;sort=start,\
                                           ClearGroup,\
                                       SaveAsImageGroup,\
                                           SaveMapGroup,\
                                           SaveOverviewGroup,\
                                           SaveVerticalGroup,\
                                           Save3DGroup,\
                                       SaveLayerStyleGroup,\
                                       StyleGroup,\
                                       PrintGroup, \
                                       ExitGroup, \
                                   EditGroup, \
                                       UndoGroup, \
                                       CopyPasteGroup, \
                                       EditSubMenuGroup,\
                                       UnitsGroup,\
                                       PrecisionGroup,\
                                       MapPropertiesGroup,\
                                   MapGroup,\
                                       MapSubMenuGroup;sort=abc,\
                                           MapColorGroup,\
                                           S52Group,\
                                           ControllersGroup,\
                                           AdvancedControllersGroup,\
                                           TeaGroup,\
                                           ProjectionGroup;sort=abc,\
                                           EditCurrentProjectionGroup,\
                                           DataPanelGroup;sort=abc,\
                                              BingMapsGroup,\
                                              OGCGroup,\
                                           AreaOfInterestGroup,\
                                       MapRotationGroup,\
                                       ScaleIconGroup,\
                                       FullScreenGroup,\
                                       FogLightGroup,\
                                       SelectionEditorGroup,\
                                       DrawingGroup,\
                                       ActionsGroup,\
                                       ActiveSettablesGroup,\
                                   ToolsGroup,\
                                       ToolsSubMenuGroup,\
                                       ModelReferenceGroup,\
                                       TableViewGroup,\
                                       ToolsItemGroup,\
                                   TracksGroup,\
                                       TracksSubMenuGroup,\
                                           CompassGridGroup,\
                                           FollowGroup,\
                                       NewObjectGroup,\
                                   3DViewGroup,\
                                       CameraGroup,\
                                   DefaultGroup,\
                                   HelpGroup,\
                                       DocumentationGroup,\
                                       AboutGroup

TLcyMain.mainStatusBar.groupPriorities = DefaultGroup,\
                                         statusGroup,\
                                         timeLabelGroup,\
                                         memoryUsageGroup,\
                                         logoGroup
