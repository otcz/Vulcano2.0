<!--
Example Ant build script for building and obfuscating the samples.

1. Building the samples
The 'build_samples' target of this script compiles all sample classes in the 'samples/src' directory
and packages the compiled classes in a jar file in the 'samples/lib' folder.

2. Obfuscating the samples.
The 'build_obfuscated_samples' target of this script uses ProGuard to obfuscate all LuciadLightspeed jars
as well as the jar files in the 'samples/lib' folder to distrib/samples/obfuscated. The result of this
target is a fully working, obfuscated LuciadLightspeed application that can be run with a deployment license.

Notes
=====
Building the samples and obfuscating the samples are two separate steps in this build file.
The default target only obfuscates the samples. This means it does not compile them from source first.

Call the 'deploy_samples' target if you want the obfuscated result to start from the sample source files.

Running the build script
========================
This script typically needs some more memory as the default 64 megabytes.
Something like 1024 megabytes will do. Give Ant more memory using IntelliJ:
- click Properties button in the 'Ant Build' window
  (second button from the right hand side)
- Set the maximum heap size (to 1024 or so)

To give Ant more memory using command line tool:
- set ANT_OPTS=-Xmx1024m
- call 'ant -buildfile deploy_lucy.xml'

-->
<project name="deploy_samples" default="build_obfuscated_samples" basedir="../../">


  <property name="project.dir" value="${basedir}"/>
  <property name="build.dir" value="distrib/samples"/>
  <property name="work.dir" value="${build.dir}/build_files"/>
  <property name="distribution.dir" value="${build.dir}/obfuscated"/>
  <dirname property="ant.dir" file="${ant.file}"/>
  <property file="${ant.dir}/deploy_samples.properties"/>

  <!-- This selector selects all the jars that contain LuciadLightspeed code, and that should be obfuscated. -->
  <selector id="luciad_jars">
    <or>
      <filename name="lcd_*.jar"/>
    </or>
  </selector>

  <target description="cleans all output generated by this ant script" name="clean">
    <delete dir="${build.dir}"/>
    <delete file="${project.dir}/samples/lib/samples.jar"/>
  </target>

  <target name="-compile_samples">
    <mkdir dir="${work.dir}/classes"/>
    <javac includeantruntime="false"
           srcdir="${project.dir}/samples/src"
           destdir="${work.dir}/classes"
           source="1.8" target="1.8"
           fork="true">
      <classpath>
        <fileset dir="/lib"/>
      </classpath>
    </javac>
  </target>

  <target name="-remove_original_sample_jars">
    <!-- By default, the LuciadLightspeed samples are delivered in several separate jar files.
    Delete those first, to prevent classes being present in both the original jar files
    and the samples.jar file created by this target -->
    <delete>
      <fileset dir="${project.dir}/samples/lib/" excludes="samples.jar"/>
    </delete>
  </target>

  <target name="-package_samples" depends="-compile_samples, -remove_original_sample_jars">
    <jar destfile="${project.dir}/samples/lib/samples.jar">
      <fileset dir="${work.dir}/classes"/>
    </jar>
  </target>

  <target name="-obfuscate_samples">
    <!-- we can't reliably detect a path relative to the working directory (user.dir), so just try it if proguard.location doesn't work directly -->
    <condition property="proguard.jar" value="${proguard.location}" else="${user.dir}/${proguard.location}">
      <available file="${proguard.location}"/>
    </condition>
    <available property="proguard.available" file="${proguard.jar}"/>
    <fail unless="proguard.available" message="You need to download ProGuard (http://proguard.sourceforge.net) to obfuscate the samples. After downloading, put the proguard.jar in the build/proguard directory"/>

    <taskdef resource="proguard/ant/task.properties">
      <classpath location="${proguard.jar}"/>
    </taskdef>

    <!--ProGuard is not configured for incremental obfuscation, so remove the results of any
    possible previous obfuscation. -->
    <delete>
      <fileset dir="${distribution.dir}/lib" erroronmissingdir="false">
        <selector refid="luciad_jars"/>
      </fileset>
      <fileset dir="${distribution.dir}/samples/lib" erroronmissingdir="false"/>
    </delete>

    <!--
    This is a mixed-style ProGuard configuration:
      - injars, outjars and library jars are configured using ant types,
      - keep directives are specified in ProGuard's configuration format, in separate files
    -->
    <proguard>
      <configuration dir="${project.dir}/">
        <include name="build/proguard/luciadlightspeed.pro"/>
        <!-- If Lucy is available, include the Lucy configuration as well -->
        <include name="build/proguard/lucy_end_user.pro"/>
      </configuration>

      <configuration file="build/proguard/samples.pro"/>

      <injar>
        <fileset dir="/lib">
          <selector refid="luciad_jars"/>
        </fileset>
      </injar>
      <outjar dir="${distribution.dir}/lib"/>

      <injar>
        <fileset dir="${project.dir}/samples/lib"/>
      </injar>
      <outjar dir="${distribution.dir}/samples/lib"/>

      <libraryjar>
        <fileset dir="/lib" includes="*.jar">
          <not>
            <selector refid="luciad_jars"/>
          </not>
        </fileset>
      </libraryjar>

      <libraryjar location="${java.home}/lib/rt.jar"/>
      <libraryjar location="${java.home}/lib/jce.jar"/>
    </proguard>

  </target>

  <target name="-copy_application_files">
    <copy todir="${distribution.dir}">
      <fileset dir="${project.dir}" includes="config/**"/>
      <fileset dir="${project.dir}" includes="simbologia.frmSimbolosComunes.unidadesTerrestres.resources/**"/>
      <fileset dir="${project.dir}" includes="*.sh, *.bat, *.xml, start.jar"/>
      <fileset dir="${project.dir}" includes="licenses/*deployment*"/>
      <fileset dir="${project.dir}" includes="samples/*.sh,samples/*.bat,samples/simbologia.frmSimbolosComunes.unidadesTerrestres.resources/**,samples/index.xml"/>
    </copy>

    <copy todir="${distribution.dir}/lib">
      <fileset dir="/lib">
        <not>
          <selector refid="luciad_jars"/>
        </not>
      </fileset>
    </copy>

    <chmod perm="+x">
      <fileset dir="${distribution.dir}/" includes="*.bat,*.sh,samples/*.bat,samples/*.sh"/>
    </chmod>
  </target>

  <target description="compiles the sample source classes and packages the result in samples/lib"
          name="build_samples"
          depends="-package_samples"/>

  <target description="obfuscates the samples without first compiling them"
          name="build_obfuscated_samples"
          depends="-obfuscate_samples, -copy_application_files"/>

  <target description="First cleans up any old results and then compiles and obfuscates the samples"
          name="deploy_samples" depends="clean, -package_samples, -obfuscate_samples, -copy_application_files"/>
</project>
