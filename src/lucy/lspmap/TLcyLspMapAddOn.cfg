# The title and location of the map's applications pane. {0} is replaced with the map component's name.
#
# You can override this location and/or title for map components of a certain type.
# This is done by specifying a property consisting of three parts:
# a prefix ( TLcyLspMapAddOn. ), the type of the map (e.g. default) and the suffix ( .applicationPane.appTitle)
# For example if you want to have a custom title for touch maps, you would specify
#
# TLcyLspMapAddOn.touch.applicationPane.appTitle = {0} (touch)
#
# When no custom title or location is specified for a certain map type, the default settings as specified
# below will be used.
TLcyLspMapAddOn.applicationPane.appTitle={0}
TLcyLspMapAddOn.applicationPane.location=0

# The maximum number of maps which can be opened through the user interface. Set to -1 if an
# unlimited number of maps should be allowed.
TLcyLspMapAddOn.maxNumberOfMaps = 5

TLcyLspMapAddOn.createMapAction.default.menuBar.item=File,New,Map
TLcyLspMapAddOn.createMapAction.default.menuBar.groups=FileGroup,NewGroup,NewMapGroup
TLcyLspMapAddOn.createMapAction.default.menuBar.shortDescription=Creates a new map
TLcyLspMapAddOn.createMapAction.default.menuBar.smallIcon=
TLcyLspMapAddOn.createMapAction.default.menuBar.insert=true

TLcyLspMapAddOn.createMapAction.touch.menuBar.item=File,New,Map
TLcyLspMapAddOn.createMapAction.touch.menuBar.groups=FileGroup,NewGroup,NewMapGroup
TLcyLspMapAddOn.createMapAction.touch.menuBar.shortDescription=Creates a new map with touch controllers
TLcyLspMapAddOn.createMapAction.touch.menuBar.smallIcon=
TLcyLspMapAddOn.createMapAction.touch.menuBar.insert=false

# Choose the factory to create the maps. Use the full qualified class name
# The key of the property consists of two parts: a prefix ( TLcyLspMapAddOn.GUIFactory. ) followed by the map type ( default )
# It is allowed to define different factories for different map types
#TLcyLspMapAddOn.GUIFactory.default=com.luciad.lucy.map.lightspeed.TLcyLspMapComponentFactory

# Each map component type can have its own configuration file. When no config file is specified for a certain
# type, the TLcyLspMapAddOn_MapComponent.cfg file will be used
# The key of the property consists of two parts: a prefix ( TLcyLspMapAddOn.configurationFile. ) followed by the map
# type (default)
TLcyLspMapAddOn.configurationFile.default = lucy/lspmap/TLcyLspMapAddOn_MapComponent.cfg
TLcyLspMapAddOn.configurationFile.touch = lucy/lspmap/TLcyLspMapAddOn_TouchMapComponent.cfg

# Each map component type can have its own background layer(s). When no background data is specified for a certain
# type, none will be added.
# The key of the property consists of two parts: a prefix (TLcyLspMapAddOn.backgroundDataFileName. ) followed by
# the map type (default)
# The value is a path to the file, relative to the classpath. Multiple files can be specified using a comma separated
# list.
# You can load BingMaps data as well: see TLcyBingMapsAddOn.cfg for more information
#
# This property applies to the newly created maps, e.g. using File | New | Map. Maps loaded from the
# workspace are restored just as they were saved.
TLcyLspMapAddOn.backgroundDataFileName.default=Data/Earth/World/tilerepository.cfg
TLcyLspMapAddOn.backgroundDataFileName.touch=Data/Earth/World/tilerepository.cfg

# Property that determines if the map fits on newly added data
TLcyLspMapAddOn.fitOnAddData=true

# This property specifies which map types must be created automatically when the add-on is loaded:
# one map will be created for each of the specified map types.
# The value of this property is a comma-separated list of the different map types.
#
# Note that this property has no effect when the TLcyWorkspaceAddOn is used and loads a default workspace.
# Any map created by this setting will be removed again when the workspace is loaded.
# Since the default Lucy uses the TLcyWorkspaceAddOn, this setting is by default commented out
# TLcyLspMapAddOn.mapTypesToCreate = default